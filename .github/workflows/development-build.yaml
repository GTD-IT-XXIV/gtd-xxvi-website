name: Development Build

on:
  workflow_call:
  workflow_dispatch:

env:
  DATABASE_URL: ${{ secrets.DEV_DATABASE_URL }}
  STRIPE_SECRET_KEY: ${{ secrets.DEV_STRIPE_SECRET_KEY }}
  STRIPE_WEBHOOK_SECRET: ${{ secrets.DEV_STRIPE_WEBHOOK_SECRET }}
  NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.DEV_STRIPE_PUBLISHABLE_KEY }}
  AUTH_SECRET: ${{ secrets.DEV_AUTH_SECRET }}
  BREVO_API_KEY: ${{ secrets.BREVO_API_KEY }}
  GOOGLE_CLIENT_EMAIL: ${{ secrets.GOOGLE_CLIENT_EMAIL }}
  GOOGLE_PRIVATE_KEY: ${{ secrets.GOOGLE_PRIVATE_KEY }}
  SHEETS_ID: ${{ secrets.DEV_SHEETS_ID }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
        pnpm-version: [8]
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm ${{ matrix.pnpm-version }}
        uses: pnpm/action-setup@v2
        with:
          version: ${{ matrix.pnpm-version }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Restore next build
        uses: actions/cache@v4
        with:
          # if you use a custom build directory, replace all instances of `.next` in this file with your build directory
          # ex: if your app builds to `dist`, replace `.next` with `dist`
          path: .next/cache
          # change this if you prefer a more strict cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build
        run: pnpm build
